name: "User API Regression"
version: "1.0"
fail_fast: true

variables:
  base_url: "${USER_API_BASE_URL}"
  auth_token: "${USER_API_TOKEN}"
  saved_new_user_name: "{{faker.name}}"
  saved_new_user_email: "{{faker.email}}"
  saved_new_user_phone: "{{faker.phone}}"
  saved_updated_user_name: "{{faker.name}}"
  saved_updated_user_email: "{{faker.email}}"
  missing_user_id: "999999"

steps:
  - name: "List Users"
    request:
      method: "GET"
      url: "{{base_url}}/users"
      headers:
        Authorization: "Bearer {{auth_token}}"
      timeout: "10s"
    validate:
      - status: 200
      - time: "< 2000ms"
      - json: "$"
        type: "array"
    capture:
      saved_first_user_id: "$[0].id"
      saved_existing_user_ids: "$[*].id"

  - name: "Create User"
    request:
      method: "POST"
      url: "{{base_url}}/users"
      headers:
        Authorization: "Bearer {{auth_token}}"
        Content-Type: "application/json"
      body:
        name: "{{saved_new_user_name}}"
        email: "{{saved_new_user_email}}"
        phone: "{{saved_new_user_phone}}"
    validate:
      - status: 201
      - json: "$.id"
        type: "number"
      - json: "$.email"
        equals: "{{saved_new_user_email}}"
    capture:
      saved_created_user_id: "$.id"
      saved_created_at: "$.createdAt"

  - name: "Fetch Created User"
    request:
      method: "GET"
      url: "{{base_url}}/users/{{saved_created_user_id}}"
      headers:
        Authorization: "Bearer {{auth_token}}"
      timeout: "10s"
    validate:
      - status: 200
      - json: "$.id"
        equals: "{{saved_created_user_id}}"
      - json: "$.email"
        equals: "{{saved_new_user_email}}"
      - json: "$.name"
        equals: "{{saved_new_user_name}}"
    capture:
      saved_original_user_payload: "$"

  - name: "Update User Details"
    request:
      method: "PUT"
      url: "{{base_url}}/users/{{saved_created_user_id}}"
      headers:
        Authorization: "Bearer {{auth_token}}"
        Content-Type: "application/json"
      body:
        name: "{{saved_updated_user_name}}"
        email: "{{saved_updated_user_email}}"
        phone: "{{saved_new_user_phone}}"
    validate:
      - status: 200
      - json: "$.id"
        equals: "{{saved_created_user_id}}"
      - json: "$.name"
        equals: "{{saved_updated_user_name}}"
    capture:
      saved_updated_user_payload: "$"

  - name: "Verify Update Persistence"
    request:
      method: "GET"
      url: "{{base_url}}/users/{{saved_created_user_id}}"
      headers:
        Authorization: "Bearer {{auth_token}}"
      timeout: "10s"
    validate:
      - status: 200
      - json: "$.name"
        equals: "{{saved_updated_user_name}}"
      - json: "$.email"
        equals: "{{saved_updated_user_email}}"

  - name: "Verify User In List"
    request:
      method: "GET"
      url: "{{base_url}}/users"
      headers:
        Authorization: "Bearer {{auth_token}}"
    validate:
      - status: 200
      - json: "$[*].id"
        contains: "{{saved_created_user_id}}"
      - json: "$[?(@.id == {{saved_created_user_id}})].email"
        contains: "{{saved_updated_user_email}}"
    capture:
      # Фильтруем массив, чтобы повторно использовать актуальную запись пользователя
      saved_user_from_list: "$[?(@.id == {{saved_created_user_id}})]"

  - name: "Fetch Missing User Returns 404"
    request:
      method: "GET"
      url: "{{base_url}}/users/{{missing_user_id}}"
      headers:
        Authorization: "Bearer {{auth_token}}"
      timeout: "10s"
    validate:
      - status: 404

  - name: "Delete User"
    request:
      method: "DELETE"
      url: "{{base_url}}/users/{{saved_created_user_id}}"
      headers:
        Authorization: "Bearer {{auth_token}}"
      timeout: "10s"
    validate:
      - status: 204

  - name: "Verify User Removed"
    request:
      method: "GET"
      url: "{{base_url}}/users/{{saved_created_user_id}}"
      headers:
        Authorization: "Bearer {{auth_token}}"
      timeout: "10s"
    validate:
      - status: 404

  - name: "Verify List No Longer Contains User"
    request:
      method: "GET"
      url: "{{base_url}}/users"
      headers:
        Authorization: "Bearer {{auth_token}}"
    validate:
      - status: 200
      - json: "$[?(@.id == {{saved_created_user_id}})]"
        equals: []